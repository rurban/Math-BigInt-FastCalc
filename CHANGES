Revision history for Perl extension Math::BigInt::FastCalc.

0.01  Wed Jun  5 13:03:55 2002
	- original version; created by h2xs 1.21 with options
		-n Math::BigInt::FastCalc -A
2002-08-09 0.02 Tels
  - first working version of XS code of _is_even(), _is_odd()

2002-08-12 0.03 Tels
  - Took Calc.pm and converted it to FastCalc.pm
  - first two functions, _is_odd() and _is_even() in XS
  - testsuite from MBI v1.61
  - extended bigintc.t (also renamed to bigintfc.t)

2002-08-13 0.04 Tels first release
  - added is_zero(), is_one(), _zero(), _one(), _two() and _acmp()
  - more tests in bigintfc.t

  Some general observations:
  * is_*() methods are quite a bit faster than in Calc, but due to the
    overhead in Math::BigInt real programs will get only a bit faster
    (around 2-5%).
  * Comparisation is *much* faster, and even via Math::BigInt improves
    the performance by about factor 9 for large numbers. For smalle numbers
    (less than 8000 digits) it is still about factor 2.5 to 8. This is only
    valid if the numbers have both the same length. If the length is
     different, then FastCalc is about factor 1.2 to 1.7 faster than Calc.

